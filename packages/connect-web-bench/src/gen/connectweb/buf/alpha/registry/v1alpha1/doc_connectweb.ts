// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-web v0.0.9 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/alpha/registry/v1alpha1/doc.proto (package buf.alpha.registry.v1alpha1, syntax proto3)
/* eslint-disable */

import {GetModuleDocumentationRequest, GetModuleDocumentationResponse, GetModulePackagesRequest, GetModulePackagesResponse, GetPackageDocumentationRequest, GetPackageDocumentationResponse, GetSourceDirectoryInfoRequest, GetSourceDirectoryInfoResponse, GetSourceFileRequest, GetSourceFileResponse} from "./doc_pb.js";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * DocService defines a set of APIs that are intended for use by bufwebd only.
 * This is not intended for general use; changes and use cases are subject to executive approval.
 *
 * @generated from service buf.alpha.registry.v1alpha1.DocService
 */
export const DocService = {
  typeName: "buf.alpha.registry.v1alpha1.DocService",
  methods: {
    /**
     * GetSourceDirectoryInfo retrieves the directory and file structure for the
     * given owner, repository and reference.
     *
     * The purpose of this is to get a representation of the file tree for a given
     * module to enable exploring the module by navigating through its contents.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetSourceDirectoryInfo
     */
    getSourceDirectoryInfo: {
      name: "GetSourceDirectoryInfo",
      I: GetSourceDirectoryInfoRequest,
      O: GetSourceDirectoryInfoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetSourceFile retrieves the source contents for the given owner, repository,
     * reference, and path.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetSourceFile
     */
    getSourceFile: {
      name: "GetSourceFile",
      I: GetSourceFileRequest,
      O: GetSourceFileResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetModulePackages retrieves the list of packages for the module based on the given
     * owner, repository, and reference.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetModulePackages
     */
    getModulePackages: {
      name: "GetModulePackages",
      I: GetModulePackagesRequest,
      O: GetModulePackagesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetModuleDocumentation retrieves the documentation for module based on the given
     * owner, repository, and reference.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetModuleDocumentation
     */
    getModuleDocumentation: {
      name: "GetModuleDocumentation",
      I: GetModuleDocumentationRequest,
      O: GetModuleDocumentationResponse,
      kind: MethodKind.Unary,
    },
    /**
     * GetPackageDocumentation retrieves a a slice of documentation structures
     * for the given owner, repository, reference, and package name.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.DocService.GetPackageDocumentation
     */
    getPackageDocumentation: {
      name: "GetPackageDocumentation",
      I: GetPackageDocumentationRequest,
      O: GetPackageDocumentationResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

