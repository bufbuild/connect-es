// Copyright 2021-2024 The Connect Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/registry/module/v1/resource_service.proto (package buf.registry.module.v1, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Resource, ResourceRef } from "./resource_pb.js";

/**
 * @generated from message buf.registry.module.v1.GetResourcesRequest
 */
export class GetResourcesRequest extends Message<GetResourcesRequest> {
  /**
   * References to request a Resource for.
   *
   * See the documentation on ResourceRef for resource resolution details.
   *
   * @generated from field: repeated buf.registry.module.v1.ResourceRef resource_refs = 1;
   */
  resourceRefs: ResourceRef[] = [];

  constructor(data?: PartialMessage<GetResourcesRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.module.v1.GetResourcesRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resource_refs", kind: "message", T: ResourceRef, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetResourcesRequest {
    return new GetResourcesRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetResourcesRequest {
    return new GetResourcesRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetResourcesRequest {
    return new GetResourcesRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetResourcesRequest | PlainMessage<GetResourcesRequest> | undefined, b: GetResourcesRequest | PlainMessage<GetResourcesRequest> | undefined): boolean {
    return proto3.util.equals(GetResourcesRequest, a, b);
  }
}

/**
 * @generated from message buf.registry.module.v1.GetResourcesResponse
 */
export class GetResourcesResponse extends Message<GetResourcesResponse> {
  /**
   * The found Resources in the same order as requested.
   *
   * @generated from field: repeated buf.registry.module.v1.Resource resources = 1;
   */
  resources: Resource[] = [];

  constructor(data?: PartialMessage<GetResourcesResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.module.v1.GetResourcesResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "resources", kind: "message", T: Resource, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetResourcesResponse {
    return new GetResourcesResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetResourcesResponse {
    return new GetResourcesResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetResourcesResponse {
    return new GetResourcesResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetResourcesResponse | PlainMessage<GetResourcesResponse> | undefined, b: GetResourcesResponse | PlainMessage<GetResourcesResponse> | undefined): boolean {
    return proto3.util.equals(GetResourcesResponse, a, b);
  }
}

