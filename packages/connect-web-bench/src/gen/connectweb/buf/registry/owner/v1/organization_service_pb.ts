// Copyright 2021-2024 The Connect Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-es v1.10.0 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/registry/owner/v1/organization_service.proto (package buf.registry.owner.v1, syntax proto3)
/* eslint-disable */

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Organization, OrganizationRef, OrganizationVerificationStatus } from "./organization_pb.js";
import { UserRef } from "./user_pb.js";

/**
 * @generated from message buf.registry.owner.v1.GetOrganizationsRequest
 */
export class GetOrganizationsRequest extends Message<GetOrganizationsRequest> {
  /**
   * The Organizations to request.
   *
   * @generated from field: repeated buf.registry.owner.v1.OrganizationRef organization_refs = 1;
   */
  organizationRefs: OrganizationRef[] = [];

  constructor(data?: PartialMessage<GetOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.GetOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_refs", kind: "message", T: OrganizationRef, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationsRequest {
    return new GetOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationsRequest {
    return new GetOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationsRequest {
    return new GetOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationsRequest | PlainMessage<GetOrganizationsRequest> | undefined, b: GetOrganizationsRequest | PlainMessage<GetOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(GetOrganizationsRequest, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.GetOrganizationsResponse
 */
export class GetOrganizationsResponse extends Message<GetOrganizationsResponse> {
  /**
   * The retrieved Organizations in the same order as requested.
   *
   * @generated from field: repeated buf.registry.owner.v1.Organization organizations = 1;
   */
  organizations: Organization[] = [];

  constructor(data?: PartialMessage<GetOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.GetOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organizations", kind: "message", T: Organization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOrganizationsResponse {
    return new GetOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOrganizationsResponse {
    return new GetOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOrganizationsResponse {
    return new GetOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOrganizationsResponse | PlainMessage<GetOrganizationsResponse> | undefined, b: GetOrganizationsResponse | PlainMessage<GetOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(GetOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.ListOrganizationsRequest
 */
export class ListOrganizationsRequest extends Message<ListOrganizationsRequest> {
  /**
   * The maximum number of items to return.
   *
   * The default value is 10.
   *
   * @generated from field: uint32 page_size = 1;
   */
  pageSize = 0;

  /**
   * The page to start from.
   *
   * If empty, the first page is returned,
   *
   * @generated from field: string page_token = 2;
   */
  pageToken = "";

  /**
   * The ids of the specific Users to list Organizations for.
   *
   * If this is empty, all Organizations are listed, but this functionality
   * is limited to Users with the necessary permissions.
   *
   * @generated from field: repeated buf.registry.owner.v1.UserRef user_refs = 3;
   */
  userRefs: UserRef[] = [];

  /**
   * The order to return the Organizations.
   *
   * If not specified, defaults to ORDER_CREATE_TIME_DESC.
   *
   * @generated from field: buf.registry.owner.v1.ListOrganizationsRequest.Order order = 4;
   */
  order = ListOrganizationsRequest_Order.UNSPECIFIED;

  constructor(data?: PartialMessage<ListOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.ListOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "page_size", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_refs", kind: "message", T: UserRef, repeated: true },
    { no: 4, name: "order", kind: "enum", T: proto3.getEnumType(ListOrganizationsRequest_Order) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationsRequest {
    return new ListOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationsRequest | PlainMessage<ListOrganizationsRequest> | undefined, b: ListOrganizationsRequest | PlainMessage<ListOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(ListOrganizationsRequest, a, b);
  }
}

/**
 * The list order.
 *
 * @generated from enum buf.registry.owner.v1.ListOrganizationsRequest.Order
 */
export enum ListOrganizationsRequest_Order {
  /**
   * @generated from enum value: ORDER_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * Order by create_time newest to oldest.
   *
   * @generated from enum value: ORDER_CREATE_TIME_DESC = 1;
   */
  CREATE_TIME_DESC = 1,

  /**
   * Order by create_time oldest to newest.
   *
   * @generated from enum value: ORDER_CREATE_TIME_ASC = 2;
   */
  CREATE_TIME_ASC = 2,
}
// Retrieve enum metadata with: proto3.getEnumType(ListOrganizationsRequest_Order)
proto3.util.setEnumType(ListOrganizationsRequest_Order, "buf.registry.owner.v1.ListOrganizationsRequest.Order", [
  { no: 0, name: "ORDER_UNSPECIFIED" },
  { no: 1, name: "ORDER_CREATE_TIME_DESC" },
  { no: 2, name: "ORDER_CREATE_TIME_ASC" },
]);

/**
 * @generated from message buf.registry.owner.v1.ListOrganizationsResponse
 */
export class ListOrganizationsResponse extends Message<ListOrganizationsResponse> {
  /**
   * The next page token.
   *
   * If empty, there are no more pages.
   *
   * @generated from field: string next_page_token = 1;
   */
  nextPageToken = "";

  /**
   * The listed Organizations.
   *
   * @generated from field: repeated buf.registry.owner.v1.Organization organizations = 2;
   */
  organizations: Organization[] = [];

  constructor(data?: PartialMessage<ListOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.ListOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "organizations", kind: "message", T: Organization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOrganizationsResponse {
    return new ListOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOrganizationsResponse | PlainMessage<ListOrganizationsResponse> | undefined, b: ListOrganizationsResponse | PlainMessage<ListOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(ListOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.CreateOrganizationsRequest
 */
export class CreateOrganizationsRequest extends Message<CreateOrganizationsRequest> {
  /**
   * The Organizations to create.
   *
   * @generated from field: repeated buf.registry.owner.v1.CreateOrganizationsRequest.Value values = 1;
   */
  values: CreateOrganizationsRequest_Value[] = [];

  constructor(data?: PartialMessage<CreateOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.CreateOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "values", kind: "message", T: CreateOrganizationsRequest_Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationsRequest {
    return new CreateOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationsRequest {
    return new CreateOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationsRequest {
    return new CreateOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationsRequest | PlainMessage<CreateOrganizationsRequest> | undefined, b: CreateOrganizationsRequest | PlainMessage<CreateOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationsRequest, a, b);
  }
}

/**
 * An individual request to create an Organization.
 *
 * @generated from message buf.registry.owner.v1.CreateOrganizationsRequest.Value
 */
export class CreateOrganizationsRequest_Value extends Message<CreateOrganizationsRequest_Value> {
  /**
   * The name of the Organization.
   *
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * The configurable description of the Organization.
   *
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * The configurable URL that represents the homepage for an Organization.
   *
   * @generated from field: string url = 3;
   */
  url = "";

  /**
   * The verification status of the Organization.
   *
   * If not set, the Organization will default to VERIFICATION_STATUS_UNVERIFIED.
   *
   * @generated from field: buf.registry.owner.v1.OrganizationVerificationStatus verification_status = 4;
   */
  verificationStatus = OrganizationVerificationStatus.UNSPECIFIED;

  constructor(data?: PartialMessage<CreateOrganizationsRequest_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.CreateOrganizationsRequest.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "verification_status", kind: "enum", T: proto3.getEnumType(OrganizationVerificationStatus) },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationsRequest_Value {
    return new CreateOrganizationsRequest_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationsRequest_Value {
    return new CreateOrganizationsRequest_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationsRequest_Value {
    return new CreateOrganizationsRequest_Value().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationsRequest_Value | PlainMessage<CreateOrganizationsRequest_Value> | undefined, b: CreateOrganizationsRequest_Value | PlainMessage<CreateOrganizationsRequest_Value> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationsRequest_Value, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.CreateOrganizationsResponse
 */
export class CreateOrganizationsResponse extends Message<CreateOrganizationsResponse> {
  /**
   * The created Organizations in the same order as given on the request.
   *
   * @generated from field: repeated buf.registry.owner.v1.Organization organizations = 1;
   */
  organizations: Organization[] = [];

  constructor(data?: PartialMessage<CreateOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.CreateOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organizations", kind: "message", T: Organization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOrganizationsResponse {
    return new CreateOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOrganizationsResponse {
    return new CreateOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOrganizationsResponse {
    return new CreateOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOrganizationsResponse | PlainMessage<CreateOrganizationsResponse> | undefined, b: CreateOrganizationsResponse | PlainMessage<CreateOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(CreateOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.UpdateOrganizationsRequest
 */
export class UpdateOrganizationsRequest extends Message<UpdateOrganizationsRequest> {
  /**
   * The Organizations to update.
   *
   * @generated from field: repeated buf.registry.owner.v1.UpdateOrganizationsRequest.Value values = 1;
   */
  values: UpdateOrganizationsRequest_Value[] = [];

  constructor(data?: PartialMessage<UpdateOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.UpdateOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "values", kind: "message", T: UpdateOrganizationsRequest_Value, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationsRequest {
    return new UpdateOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationsRequest {
    return new UpdateOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationsRequest {
    return new UpdateOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationsRequest | PlainMessage<UpdateOrganizationsRequest> | undefined, b: UpdateOrganizationsRequest | PlainMessage<UpdateOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationsRequest, a, b);
  }
}

/**
 * An individual request to update an Organization.
 *
 * @generated from message buf.registry.owner.v1.UpdateOrganizationsRequest.Value
 */
export class UpdateOrganizationsRequest_Value extends Message<UpdateOrganizationsRequest_Value> {
  /**
   * The organization to update.
   *
   * @generated from field: buf.registry.owner.v1.OrganizationRef organization_ref = 1;
   */
  organizationRef?: OrganizationRef;

  /**
   * The configurable description of the Organization.
   *
   * @generated from field: optional string description = 2;
   */
  description?: string;

  /**
   * The configurable URL that represents the homepage for an Organization.
   *
   * @generated from field: optional string url = 3;
   */
  url?: string;

  /**
   * The verification status of the Organization.
   *
   * @generated from field: optional buf.registry.owner.v1.OrganizationVerificationStatus verification_status = 4;
   */
  verificationStatus?: OrganizationVerificationStatus;

  constructor(data?: PartialMessage<UpdateOrganizationsRequest_Value>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.UpdateOrganizationsRequest.Value";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_ref", kind: "message", T: OrganizationRef },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "url", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "verification_status", kind: "enum", T: proto3.getEnumType(OrganizationVerificationStatus), opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationsRequest_Value {
    return new UpdateOrganizationsRequest_Value().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationsRequest_Value {
    return new UpdateOrganizationsRequest_Value().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationsRequest_Value {
    return new UpdateOrganizationsRequest_Value().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationsRequest_Value | PlainMessage<UpdateOrganizationsRequest_Value> | undefined, b: UpdateOrganizationsRequest_Value | PlainMessage<UpdateOrganizationsRequest_Value> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationsRequest_Value, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.UpdateOrganizationsResponse
 */
export class UpdateOrganizationsResponse extends Message<UpdateOrganizationsResponse> {
  /**
   * The updated Organizations in the same order as given on the request.
   *
   * @generated from field: repeated buf.registry.owner.v1.Organization organizations = 1;
   */
  organizations: Organization[] = [];

  constructor(data?: PartialMessage<UpdateOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.UpdateOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organizations", kind: "message", T: Organization, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOrganizationsResponse {
    return new UpdateOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOrganizationsResponse {
    return new UpdateOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOrganizationsResponse {
    return new UpdateOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOrganizationsResponse | PlainMessage<UpdateOrganizationsResponse> | undefined, b: UpdateOrganizationsResponse | PlainMessage<UpdateOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOrganizationsResponse, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.DeleteOrganizationsRequest
 */
export class DeleteOrganizationsRequest extends Message<DeleteOrganizationsRequest> {
  /**
   * The Organizations to delete.
   *
   * @generated from field: repeated buf.registry.owner.v1.OrganizationRef organization_refs = 1;
   */
  organizationRefs: OrganizationRef[] = [];

  constructor(data?: PartialMessage<DeleteOrganizationsRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.DeleteOrganizationsRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "organization_refs", kind: "message", T: OrganizationRef, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrganizationsRequest {
    return new DeleteOrganizationsRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrganizationsRequest {
    return new DeleteOrganizationsRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrganizationsRequest {
    return new DeleteOrganizationsRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOrganizationsRequest | PlainMessage<DeleteOrganizationsRequest> | undefined, b: DeleteOrganizationsRequest | PlainMessage<DeleteOrganizationsRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOrganizationsRequest, a, b);
  }
}

/**
 * @generated from message buf.registry.owner.v1.DeleteOrganizationsResponse
 */
export class DeleteOrganizationsResponse extends Message<DeleteOrganizationsResponse> {
  constructor(data?: PartialMessage<DeleteOrganizationsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "buf.registry.owner.v1.DeleteOrganizationsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOrganizationsResponse {
    return new DeleteOrganizationsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOrganizationsResponse {
    return new DeleteOrganizationsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOrganizationsResponse {
    return new DeleteOrganizationsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOrganizationsResponse | PlainMessage<DeleteOrganizationsResponse> | undefined, b: DeleteOrganizationsResponse | PlainMessage<DeleteOrganizationsResponse> | undefined): boolean {
    return proto3.util.equals(DeleteOrganizationsResponse, a, b);
  }
}

