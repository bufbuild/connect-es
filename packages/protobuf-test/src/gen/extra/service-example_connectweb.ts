/* eslint-disable */
// @generated by protoc-gen-connect-web v0.0.1 with parameter "ts_nocheck=false"
// @generated from file extra/service-example.proto (package spec, syntax proto3)
//
// Copyright 2021-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

import {ExampleRequest, ExampleResponse} from "./service-example_pb.js";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * @generated from service spec.ExampleService
 */
export const ExampleService = {
    typeName: "spec.ExampleService",
    methods: {
        /**
         * @generated from rpc spec.ExampleService.Unary
         */
        unary: {
            name: "Unary",
            I: ExampleRequest,
            O: ExampleResponse,
            kind: MethodKind.Unary,
        },
        /**
         * @generated from rpc spec.ExampleService.ServerStream
         */
        serverStream: {
            name: "ServerStream",
            I: ExampleRequest,
            O: ExampleResponse,
            kind: MethodKind.ServerStreaming,
        },
        /**
         * @generated from rpc spec.ExampleService.ClientStream
         */
        clientStream: {
            name: "ClientStream",
            I: ExampleRequest,
            O: ExampleResponse,
            kind: MethodKind.ClientStreaming,
        },
        /**
         * @generated from rpc spec.ExampleService.Bidi
         */
        bidi: {
            name: "Bidi",
            I: ExampleRequest,
            O: ExampleResponse,
            kind: MethodKind.BiDiStreaming,
        },
    }
} as const;

