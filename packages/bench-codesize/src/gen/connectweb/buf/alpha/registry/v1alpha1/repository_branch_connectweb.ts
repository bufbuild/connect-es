// Copyright 2020-2022 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-web v0.0.9 with parameter "ts_nocheck=false,target=ts"
// @generated from file buf/alpha/registry/v1alpha1/repository_branch.proto (package buf.alpha.registry.v1alpha1, syntax proto3)
/* eslint-disable */

import {CreateRepositoryBranchRequest, CreateRepositoryBranchResponse, ListRepositoryBranchesRequest, ListRepositoryBranchesResponse} from "./repository_branch_pb.js";
import {MethodKind} from "@bufbuild/protobuf";

/**
 * RepositoryBranchService is the Repository branch service.
 *
 * @generated from service buf.alpha.registry.v1alpha1.RepositoryBranchService
 */
export const RepositoryBranchService = {
  typeName: "buf.alpha.registry.v1alpha1.RepositoryBranchService",
  methods: {
    /**
     * CreateRepositoryBranch creates a new repository branch.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryBranchService.CreateRepositoryBranch
     */
    createRepositoryBranch: {
      name: "CreateRepositoryBranch",
      I: CreateRepositoryBranchRequest,
      O: CreateRepositoryBranchResponse,
      kind: MethodKind.Unary,
    },
    /**
     * ListRepositoryBranches lists the repository branches associated with a Repository.
     *
     * @generated from rpc buf.alpha.registry.v1alpha1.RepositoryBranchService.ListRepositoryBranches
     */
    listRepositoryBranches: {
      name: "ListRepositoryBranches",
      I: ListRepositoryBranchesRequest,
      O: ListRepositoryBranchesResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

