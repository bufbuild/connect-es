name: Publish release

on:
  pull_request_review:
    types: [edited, submitted]

permissions:
  contents: write
  pull-requests: write

jobs:
  perform-release:
    if: contains(github.event.pull_request.labels.*.name, 'release') && github.event.review.state == 'approved'
    runs-on: ubuntu-20.04
    steps:
      - name: checkout
        uses: actions/checkout@v3
        with:
          # Fetch full depth so we can get history and compare
          fetch-depth: 0
          ref: 'main'
      - uses: actions/setup-node@v3
        with:
          node-version: 16.15.0
      - name: setup-go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18
      - name: merge pr
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.pull_request.number }},
              merge_method: "squash"
            })
      - name: create tag
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git tag -a "${{ steps.publish.outputs.nextVersion }}" -m "Release ${{ steps.publish.outputs.nextVersion }}"
          git push
          git push --tags
      - name: publish to npm
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
        run: |
          npm set //registry.npmjs.org/:_authToken $NPM_PUBLISH_TOKEN
          make release
      - name: create release
        id: create_release
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: "${{ steps.publish.outputs.nextVersion }}",
              tag_name: "${{ steps.publish.outputs.nextVersion }}",
              body: "${{ github.event.pull_request.body }}",
              prerelease: true
            })
      - name: close PR
        run: |
          gh pr close ${{ github.event.pull_request.number }} -d -c "Released!"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}